name: Auto Release

on:
  push:
    tags:
      - 'v*'

env:
  NODE_VERSION: '22'
  NPM_REGISTRY: 'https://npm.pkg.github.com'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Extract version from tag
        id: version
        run: |
          TAG_NAME="${{ github.ref_name }}"
          VERSION=${TAG_NAME#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION from tag: $TAG_NAME"

      - name: Update package.json version
        run: npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Generate changelog
        id: changelog
        run: |
          # Install conventional-changelog-cli
          npm install -g conventional-changelog-cli
          
          # Generate changelog from conventional commits
          conventional-changelog -p angular -i CHANGELOG.md -s -r 0 > temp_changelog.md
          
          # Extract the new version section
          NEW_VERSION="${{ steps.version.outputs.version }}"
          TODAY=$(date +%Y-%m-%d)
          
          # Create new changelog entry
          echo "# Changelog" > new_changelog.md
          echo "" >> new_changelog.md
          echo "## [$NEW_VERSION] - $TODAY" >> new_changelog.md
          echo "" >> new_changelog.md
          
          # Get commits since last tag
          if git describe --tags --abbrev=0 >/dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0)
            echo "### Changes since $LAST_TAG" >> new_changelog.md
            echo "" >> new_changelog.md
            
            # Get conventional commits
            git log --pretty=format:"%s" $LAST_TAG..HEAD | grep -E "^(feat|fix|docs|style|refactor|perf|test|chore)(\(.+\))?:" | head -20 >> new_changelog.md
          else
            echo "### Initial Release" >> new_changelog.md
            echo "" >> new_changelog.md
          fi
          
          echo "" >> new_changelog.md
          cat CHANGELOG.md >> new_changelog.md
          mv new_changelog.md CHANGELOG.md
          
          # Output changelog for next job
          echo "changelog=$(cat CHANGELOG.md)" >> $GITHUB_OUTPUT

      - name: Build package
        run: npm run build

      - name: Test package
        run: npm test

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore(release): ${{ steps.version.outputs.version }}"
          git push origin HEAD:${{ github.ref_name }}

      - name: Publish to GitHub Packages
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        run: |
          gh release create "${{ github.ref_name }}" \
            --title "Release ${{ steps.version.outputs.version }}" \
            --notes "${{ steps.changelog.outputs.changelog }}" \
            --target main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
